import {Observable} from 'rxjs/src/internal/Observable';
import {SchedulerLike} from 'rxjs/src/internal/types';
import {subscribeToIterable} from 'rxjs/src/internal/util/subscribeToIterable';
import {scheduleIterable} from 'rxjs/src/internal/scheduled/scheduleIterable';

export function fromIterable<T>(input: Iterable<T>, scheduler?: SchedulerLike) {
    if (!input) {
        throw new Error('Iterable cannot be null');
    }
    if (!scheduler) {
        return new Observable<T>(subscribeToIterable(input));
    } else {
        return scheduleIterable(input, scheduler);
    }
}
