import {Observable} from 'rxjs/src/internal/Observable';
import {SchedulerLike} from 'rxjs/src/internal/types';
import {Subscription} from 'rxjs/src/internal/Subscription';

export function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {
    return new Observable<T>(subscriber => {
        const sub = new Subscription();
        sub.add(scheduler.schedule(() => input.then(
            value => {
                sub.add(scheduler.schedule(() => {
                    subscriber.next(value);
                    sub.add(scheduler.schedule(() => subscriber.complete()));
                }));
            },
            err => {
                sub.add(scheduler.schedule(() => subscriber.error(err)));
            }
        )));
        return sub;
    });
}
