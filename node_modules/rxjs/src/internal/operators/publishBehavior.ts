import {Observable} from 'rxjs/src/internal/Observable';
import {BehaviorSubject} from 'rxjs/src/internal/BehaviorSubject';
import {multicast} from 'rxjs/src/internal/operators/multicast';
import {ConnectableObservable} from 'rxjs/src/internal/observable/ConnectableObservable';
import {UnaryFunction} from 'rxjs/src/internal/types';

/**
 * @param value
 * @return {ConnectableObservable<T>}
 * @method publishBehavior
 * @owner Observable
 */
export function publishBehavior<T>(value: T): UnaryFunction<Observable<T>, ConnectableObservable<T>> {
    return (source: Observable<T>) => multicast(new BehaviorSubject<T>(value))(source) as ConnectableObservable<T>;
}
