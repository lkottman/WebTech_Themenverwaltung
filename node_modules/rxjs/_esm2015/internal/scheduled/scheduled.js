import {scheduleObservable} from 'rxjs/_esm2015/internal/scheduled/scheduleObservable';
import {schedulePromise} from 'rxjs/_esm2015/internal/scheduled/schedulePromise';
import {scheduleArray} from 'rxjs/_esm2015/internal/scheduled/scheduleArray';
import {scheduleIterable} from 'rxjs/_esm2015/internal/scheduled/scheduleIterable';
import {isInteropObservable} from 'rxjs/_esm2015/internal/util/isInteropObservable';
import {isPromise} from 'rxjs/_esm2015/internal/util/isPromise';
import {isArrayLike} from 'rxjs/_esm2015/internal/util/isArrayLike';
import {isIterable} from 'rxjs/_esm2015/internal/util/isIterable';

export function scheduled(input, scheduler) {
    if (input != null) {
        if (isInteropObservable(input)) {
            return scheduleObservable(input, scheduler);
        } else if (isPromise(input)) {
            return schedulePromise(input, scheduler);
        } else if (isArrayLike(input)) {
            return scheduleArray(input, scheduler);
        } else if (isIterable(input) || typeof input === 'string') {
            return scheduleIterable(input, scheduler);
        }
    }
    throw new TypeError((input !== null && typeof input || input) + ' is not observable');
}

//# sourceMappingURL=scheduled.js.map