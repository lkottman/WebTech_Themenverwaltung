import {ArgumentOutOfRangeError} from 'rxjs/_esm2015/internal/util/ArgumentOutOfRangeError';
import {filter} from 'rxjs/_esm2015/internal/operators/filter';
import {throwIfEmpty} from 'rxjs/_esm2015/internal/operators/throwIfEmpty';
import {defaultIfEmpty} from 'rxjs/_esm2015/internal/operators/defaultIfEmpty';
import {take} from 'rxjs/_esm2015/internal/operators/take';

export function elementAt(index, defaultValue) {
    if (index < 0) {
        throw new ArgumentOutOfRangeError();
    }
    const hasDefaultValue = arguments.length >= 2;
    return (source) => source.pipe(filter((v, i) => i === index), take(1), hasDefaultValue
        ? defaultIfEmpty(defaultValue)
        : throwIfEmpty(() => new ArgumentOutOfRangeError()));
}

//# sourceMappingURL=elementAt.js.map