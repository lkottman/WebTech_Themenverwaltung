import {EmptyError} from 'rxjs/_esm2015/internal/util/EmptyError';
import {filter} from 'rxjs/_esm2015/internal/operators/filter';
import {take} from 'rxjs/_esm2015/internal/operators/take';
import {defaultIfEmpty} from 'rxjs/_esm2015/internal/operators/defaultIfEmpty';
import {throwIfEmpty} from 'rxjs/_esm2015/internal/operators/throwIfEmpty';
import {identity} from 'rxjs/_esm2015/internal/util/identity';

export function first(predicate, defaultValue) {
    const hasDefaultValue = arguments.length >= 2;
    return (source) => source.pipe(predicate ? filter((v, i) => predicate(v, i, source)) : identity, take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(() => new EmptyError()));
}

//# sourceMappingURL=first.js.map