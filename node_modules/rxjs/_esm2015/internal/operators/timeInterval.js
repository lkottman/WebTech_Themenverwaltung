import {async} from 'rxjs/_esm2015/internal/scheduler/async';
import {scan} from 'rxjs/_esm2015/internal/operators/scan';
import {defer} from 'rxjs/_esm2015/internal/observable/defer';
import {map} from 'rxjs/_esm2015/internal/operators/map';

export function timeInterval(scheduler = async) {
    return (source) => defer(() => {
        return source.pipe(scan(({current}, value) => ({
            value,
            current: scheduler.now(),
            last: current
        }), {
            current: scheduler.now(),
            value: undefined,
            last: undefined
        }), map(({current, last, value}) => new TimeInterval(value, current - last)));
    });
}

export class TimeInterval {
    constructor(value, interval) {
        this.value = value;
        this.interval = interval;
    }
}

//# sourceMappingURL=timeInterval.js.map