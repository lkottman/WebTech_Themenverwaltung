import {Subject} from 'rxjs/internal/Subject';
import {Subscriber} from 'rxjs/internal/Subscriber';
import {Subscription} from 'rxjs/internal/Subscription';
import {Scheduler} from 'rxjs/internal/Scheduler';
import {TestMessage} from 'rxjs/internal/testing/TestMessage';
import {SubscriptionLog} from 'rxjs/internal/testing/SubscriptionLog';
import {SubscriptionLoggable} from 'rxjs/internal/testing/SubscriptionLoggable';

/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */
export declare class HotObservable<T> extends Subject<T> implements SubscriptionLoggable {
    messages: TestMessage[];
    subscriptions: SubscriptionLog[];
    scheduler: Scheduler;
    logSubscribedFrame: () => number;
    logUnsubscribedFrame: (index: number) => void;

    constructor(messages: TestMessage[], scheduler: Scheduler);

    /** @deprecated This is an internal implementation detail, do not use. */
    _subscribe(subscriber: Subscriber<any>): Subscription;

    setup(): void;
}
