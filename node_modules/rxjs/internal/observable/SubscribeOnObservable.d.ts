import {SchedulerAction, SchedulerLike} from 'rxjs/internal/types';
import {Subscriber} from 'rxjs/internal/Subscriber';
import {Subscription} from 'rxjs/internal/Subscription';
import {Observable} from 'rxjs/internal/Observable';

export interface DispatchArg<T> {
    source: Observable<T>;
    subscriber: Subscriber<T>;
}

/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */
export declare class SubscribeOnObservable<T> extends Observable<T> {
    source: Observable<T>;
    private delayTime;
    private scheduler;

    constructor(source: Observable<T>, delayTime?: number, scheduler?: SchedulerLike);

    /** @nocollapse */
    static create<T>(source: Observable<T>, delay?: number, scheduler?: SchedulerLike): Observable<T>;

    /** @nocollapse */
    static dispatch<T>(this: SchedulerAction<T>, arg: DispatchArg<T>): Subscription;

    /** @deprecated This is an internal implementation detail, do not use. */
    _subscribe(subscriber: Subscriber<T>): Subscription;
}
